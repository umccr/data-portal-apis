# NOTE:
# If you update image version, make sure to update in docker-compose.ci.yml as well

services:

  db:
    # NOTE: Please maintain the same MySQL major version with RDS Aurora MySQL Major version policy.
    # https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.VersionPolicy.html
    # For any other version for local dev purpose, please leverage docker compose override yaml config.
    image: public.ecr.aws/docker/library/mysql:8.0
    container_name: portal_db
    command:
      # Reverting MySQL-8.4 from PR https://github.com/umccr/data-portal-apis/pull/670 to pin MySQL-8.0 instead.
      # This is to align with upstream RDS Aurora MySQL version^^. When we bump this version in future then
      # re-apply the PR 670 patch. See https://umccr.slack.com/archives/C7QC9N8G4/p1716508565949979
      # - '--mysql-native-password=ON'
      - '--default-authentication-plugin=mysql_native_password'
      - '--max_allowed_packet=1G'
      - '--net-read-timeout=90'
      - '--net-write-timeout=180'
    restart: always
    ports:
      - "3306:3306"
      - "33060:33060"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=data_portal
      - MYSQL_USER=data_portal
      - MYSQL_PASSWORD=data_portal

  localstack:
    image: public.ecr.aws/localstack/localstack:3
    container_name: portal_localstack
    ports:
      - "4566:4566"

  haproxy:
    image: public.ecr.aws/docker/library/haproxy:2.8
    container_name: portal_haproxy
    ports:
      - "80:80"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

  wes:
    image: stoplight/prism:5
    platform: linux/amd64
    container_name: portal_wes
    command: mock -d -h 0.0.0.0 "/swagger/wes.json"
    restart: always
    ports:
      - "4010:4010"
    volumes:
      - ./swagger:/swagger

  tes:
    image: stoplight/prism:5
    platform: linux/amd64
    container_name: portal_tes
    command: mock -d -h 0.0.0.0 "/swagger/tes.json"
    restart: always
    ports:
      - "4011:4010"
    volumes:
      - ./swagger:/swagger

  gds:
    image: stoplight/prism:5
    platform: linux/amd64
    container_name: portal_gds
    command: mock -d -h 0.0.0.0 "/swagger/gds.json"
    restart: always
    ports:
      - "4012:4010"
    volumes:
      - ./swagger:/swagger

  ens:
    image: stoplight/prism:5
    platform: linux/amd64
    container_name: portal_ens
    command: mock -d -h 0.0.0.0 "/swagger/ens.json"
    restart: always
    ports:
      - "4013:4010"
    volumes:
      - ./swagger:/swagger

  console:
    image: stoplight/prism:5
    platform: linux/amd64
    container_name: portal_console
    command: mock -d -h 0.0.0.0 "/swagger/console.json"
    restart: always
    ports:
      - "4014:4010"
    volumes:
      - ./swagger:/swagger

  v2:
    image: stoplight/prism:5
    platform: linux/amd64
    command: mock -d -h 0.0.0.0 "/swagger/openapi_public.yaml"
    restart: always
    ports:
      - "4015:4010"
    volumes:
      - ./swagger:/swagger
