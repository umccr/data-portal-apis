{
  "swagger": "2.0",
  "info": {
    "title": "UMCCR Data Portal API",
    "description": "UMCCR Data Portal API",
    "termsOfService": "https://umccr.org/",
    "contact": {
      "email": "services@umccr.org"
    },
    "license": {
      "name": "MIT License"
    },
    "version": "v1"
  },
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/buckets/": {
      "get": {
        "operationId": "buckets_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "buckets"
        ]
      },
      "parameters": []
    },
    "/buckets/{id}/": {
      "get": {
        "operationId": "buckets_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "buckets"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this s3 object.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/fastq/": {
      "get": {
        "operationId": "fastq_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FastqListRow"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "fastq"
        ]
      },
      "parameters": []
    },
    "/fastq/{id}/": {
      "get": {
        "operationId": "fastq_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FastqListRow"
            }
          }
        },
        "tags": [
          "fastq"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/gds/": {
      "get": {
        "operationId": "gds_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GDSFileModel"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "gds"
        ]
      },
      "parameters": []
    },
    "/gds/{id}/": {
      "get": {
        "operationId": "gds_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GDSFileModel"
            }
          }
        },
        "tags": [
          "gds"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/gds/{id}/presign/": {
      "get": {
        "operationId": "gds_presign",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GDSFileModel"
            }
          }
        },
        "tags": [
          "gds"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/libraryrun/": {
      "get": {
        "operationId": "libraryrun_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LibraryRunModel"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "libraryrun"
        ]
      },
      "parameters": []
    },
    "/libraryrun/{id}/": {
      "get": {
        "operationId": "libraryrun_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LibraryRunModel"
            }
          }
        },
        "tags": [
          "libraryrun"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/lims/": {
      "get": {
        "operationId": "lims_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LIMSRowModel"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "lims"
        ]
      },
      "parameters": []
    },
    "/lims/{id}/": {
      "get": {
        "operationId": "lims_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LIMSRowModel"
            }
          }
        },
        "tags": [
          "lims"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/metadata/": {
      "get": {
        "operationId": "metadata_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LabMetadataModel"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "metadata"
        ]
      },
      "parameters": []
    },
    "/metadata/sync/": {
      "post": {
        "operationId": "metadata_sync",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LabMetadataSync"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LabMetadataSync"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      },
      "parameters": []
    },
    "/metadata/{id}/": {
      "get": {
        "operationId": "metadata_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LabMetadataModel"
            }
          }
        },
        "tags": [
          "metadata"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/pairing/": {
      "get": {
        "operationId": "pairing_list",
        "description": "You have hit GET /pairing. This is placeholder only list endpoint. Nothing here yet.\nPlease use POST /pairing endpoint which is by_sequence_runs projection by default.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "pairing"
        ]
      },
      "post": {
        "operationId": "pairing_create",
        "description": "POST /pairing endpoint which is by_sequence_runs projection by default",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "pairing"
        ]
      },
      "parameters": []
    },
    "/pairing/by_libraries/": {
      "post": {
        "operationId": "pairing_by_libraries",
        "description": "Experimental endpoint for exposing workflow T/N pairing",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "pairing"
        ]
      },
      "parameters": []
    },
    "/pairing/by_samples/": {
      "post": {
        "operationId": "pairing_by_samples",
        "description": "Experimental endpoint for exposing workflow T/N pairing",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "pairing"
        ]
      },
      "parameters": []
    },
    "/pairing/by_sequence_runs/": {
      "post": {
        "operationId": "pairing_by_sequence_runs",
        "description": "Experimental endpoint for exposing workflow T/N pairing",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "pairing"
        ]
      },
      "parameters": []
    },
    "/pairing/by_subjects/": {
      "post": {
        "operationId": "pairing_by_subjects",
        "description": "Experimental endpoint for exposing workflow T/N pairing",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "pairing"
        ]
      },
      "parameters": []
    },
    "/pairing/by_workflows/": {
      "post": {
        "operationId": "pairing_by_workflows",
        "description": "Experimental endpoint for exposing workflow T/N pairing",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "pairing"
        ]
      },
      "parameters": []
    },
    "/presign/": {
      "get": {
        "operationId": "presign_list",
        "description": "TODO this could extend to support possibly presign list of objects\n:param request:\n:return:",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "presign"
        ]
      },
      "post": {
        "operationId": "presign_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "presign"
        ]
      },
      "parameters": []
    },
    "/runs/": {
      "get": {
        "operationId": "runs_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "runs"
        ]
      },
      "parameters": []
    },
    "/runs/{id}/": {
      "get": {
        "operationId": "runs_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "runs"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this lims row.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/s3/": {
      "get": {
        "operationId": "s3_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/S3ObjectModel"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "s3"
        ]
      },
      "parameters": []
    },
    "/s3/{id}/": {
      "get": {
        "operationId": "s3_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/S3ObjectModel"
            }
          }
        },
        "tags": [
          "s3"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/s3/{id}/content/": {
      "get": {
        "operationId": "s3_content",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/S3ObjectModel"
            }
          }
        },
        "produces": [
          "application/json",
          "image/*",
          "application/octet-stream"
        ],
        "tags": [
          "s3"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/s3/{id}/presign/": {
      "get": {
        "operationId": "s3_presign",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/S3ObjectModel"
            }
          }
        },
        "tags": [
          "s3"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/s3/{id}/restore/": {
      "post": {
        "operationId": "s3_restore",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/S3ObjectModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/S3ObjectModel"
            }
          }
        },
        "tags": [
          "s3"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/s3/{id}/status/": {
      "get": {
        "operationId": "s3_status",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/S3ObjectModel"
            }
          }
        },
        "tags": [
          "s3"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/sequence/": {
      "get": {
        "operationId": "sequence_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Sequence"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "sequence"
        ]
      },
      "parameters": []
    },
    "/sequence/{id}/": {
      "get": {
        "operationId": "sequence_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Sequence"
            }
          }
        },
        "tags": [
          "sequence"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/sequencerun/": {
      "get": {
        "operationId": "sequencerun_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SequenceRun"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "sequencerun"
        ]
      },
      "parameters": []
    },
    "/sequencerun/{id}/": {
      "get": {
        "operationId": "sequencerun_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SequenceRun"
            }
          }
        },
        "tags": [
          "sequencerun"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/somalier/": {
      "get": {
        "operationId": "somalier_list",
        "description": "You have hit GET /somalier. This is placeholder only list endpoint. Nothing here yet.\nPlease use POST /somalier endpoint which do Holmes check projection by default.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "somalier"
        ]
      },
      "post": {
        "operationId": "somalier_create",
        "description": "POST /somalier endpoint which do Holmes check projection by default",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "somalier"
        ]
      },
      "parameters": []
    },
    "/somalier/check/": {
      "post": {
        "operationId": "somalier_check",
        "description": "Experimental endpoint for exposing Somalier through Holmes interfaces",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "somalier"
        ]
      },
      "parameters": []
    },
    "/somalier/extract/": {
      "post": {
        "operationId": "somalier_extract",
        "description": "Experimental endpoint for exposing Somalier through Holmes interfaces",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "somalier"
        ]
      },
      "parameters": []
    },
    "/subjects/": {
      "get": {
        "operationId": "subjects_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "subjects"
        ]
      },
      "parameters": []
    },
    "/subjects/{id}/": {
      "get": {
        "operationId": "subjects_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "subjects"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this lims row.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/workflows/": {
      "get": {
        "operationId": "workflows_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "A search term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "rowsPerPage",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Workflow"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "workflows"
        ]
      },
      "parameters": []
    },
    "/workflows/{id}/": {
      "get": {
        "operationId": "workflows_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        },
        "tags": [
          "workflows"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "FastqListRow": {
      "required": [
        "rgid",
        "rgsm",
        "rglb",
        "lane",
        "read_1"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "rgid": {
          "title": "Rgid",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "rgsm": {
          "title": "Rgsm",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "rglb": {
          "title": "Rglb",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "lane": {
          "title": "Lane",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "read_1": {
          "title": "Read 1",
          "type": "string",
          "minLength": 1
        },
        "read_2": {
          "title": "Read 2",
          "type": "string",
          "x-nullable": true
        },
        "sequence_run": {
          "title": "Sequence run",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "GDSFileModel": {
      "required": [
        "file_id",
        "name",
        "volume_id",
        "volume_name",
        "tenant_id",
        "sub_tenant_id",
        "path",
        "time_created",
        "created_by",
        "time_modified",
        "modified_by",
        "urn",
        "size_in_bytes",
        "archive_status",
        "storage_tier"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "file_id": {
          "title": "File id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "minLength": 1
        },
        "volume_id": {
          "title": "Volume id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "volume_name": {
          "title": "Volume name",
          "type": "string",
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "tenant_id": {
          "title": "Tenant id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "sub_tenant_id": {
          "title": "Sub tenant id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "path": {
          "title": "Path",
          "type": "string",
          "minLength": 1
        },
        "time_created": {
          "title": "Time created",
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "title": "Created by",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "time_modified": {
          "title": "Time modified",
          "type": "string",
          "format": "date-time"
        },
        "modified_by": {
          "title": "Modified by",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "inherited_acl": {
          "title": "Inherited acl",
          "type": "string",
          "x-nullable": true
        },
        "urn": {
          "title": "Urn",
          "type": "string",
          "minLength": 1
        },
        "size_in_bytes": {
          "title": "Size in bytes",
          "type": "integer",
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000
        },
        "is_uploaded": {
          "title": "Is uploaded",
          "type": "boolean",
          "x-nullable": true
        },
        "archive_status": {
          "title": "Archive status",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "time_archived": {
          "title": "Time archived",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "storage_tier": {
          "title": "Storage tier",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "presigned_url": {
          "title": "Presigned url",
          "type": "string",
          "x-nullable": true
        },
        "unique_hash": {
          "title": "Unique hash",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        }
      }
    },
    "LibraryRunModel": {
      "required": [
        "library_id",
        "instrument_run_id",
        "run_id",
        "lane",
        "override_cycles",
        "workflows"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "library_id": {
          "title": "Library id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "instrument_run_id": {
          "title": "Instrument run id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "run_id": {
          "title": "Run id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "lane": {
          "title": "Lane",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "override_cycles": {
          "title": "Override cycles",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "coverage_yield": {
          "title": "Coverage yield",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "qc_pass": {
          "title": "Qc pass",
          "type": "boolean",
          "x-nullable": true
        },
        "qc_status": {
          "title": "Qc status",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "valid_for_analysis": {
          "title": "Valid for analysis",
          "type": "boolean",
          "x-nullable": true
        },
        "workflows": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "LIMSRowModel": {
      "required": [
        "illumina_id",
        "run",
        "timestamp",
        "sample_id",
        "library_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "illumina_id": {
          "title": "Illumina id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "run": {
          "title": "Run",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "timestamp": {
          "title": "Timestamp",
          "type": "string",
          "format": "date"
        },
        "subject_id": {
          "title": "Subject id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "sample_id": {
          "title": "Sample id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "library_id": {
          "title": "Library id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "external_subject_id": {
          "title": "External subject id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "external_sample_id": {
          "title": "External sample id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "external_library_id": {
          "title": "External library id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "sample_name": {
          "title": "Sample name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "project_owner": {
          "title": "Project owner",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "project_name": {
          "title": "Project name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "assay": {
          "title": "Assay",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "override_cycles": {
          "title": "Override cycles",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "phenotype": {
          "title": "Phenotype",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "source": {
          "title": "Source",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "quality": {
          "title": "Quality",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "topup": {
          "title": "Topup",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "secondary_analysis": {
          "title": "Secondary analysis",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "workflow": {
          "title": "Workflow",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "fastq": {
          "title": "Fastq",
          "type": "string",
          "x-nullable": true
        },
        "number_fastqs": {
          "title": "Number fastqs",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "results": {
          "title": "Results",
          "type": "string",
          "x-nullable": true
        },
        "trello": {
          "title": "Trello",
          "type": "string",
          "x-nullable": true
        },
        "notes": {
          "title": "Notes",
          "type": "string",
          "x-nullable": true
        },
        "todo": {
          "title": "Todo",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        }
      }
    },
    "LabMetadataModel": {
      "required": [
        "library_id",
        "sample_id",
        "phenotype",
        "quality",
        "source",
        "type",
        "assay",
        "workflow"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "library_id": {
          "title": "Library id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "sample_name": {
          "title": "Sample name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "sample_id": {
          "title": "Sample id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "external_sample_id": {
          "title": "External sample id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "subject_id": {
          "title": "Subject id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "external_subject_id": {
          "title": "External subject id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "phenotype": {
          "title": "Phenotype",
          "type": "string",
          "enum": [
            "negative-control",
            "normal",
            "tumor"
          ]
        },
        "quality": {
          "title": "Quality",
          "type": "string",
          "enum": [
            "ascites",
            "blood",
            "bone-marrow",
            "buccal",
            "cell-line",
            "cfDNA",
            "cyst-fluid",
            "DNA",
            "eyebrow-hair",
            "FFPE",
            "FNA",
            "OCT",
            "organoid",
            "PDX-tissue",
            "plasma-serum",
            "RNA",
            "tissue",
            "water"
          ]
        },
        "source": {
          "title": "Source",
          "type": "string",
          "enum": [
            "ascites",
            "blood",
            "bone-marrow",
            "buccal",
            "cell-line",
            "cfDNA",
            "cyst-fluid",
            "DNA",
            "eyebrow-hair",
            "FFPE",
            "FNA",
            "OCT",
            "organoid",
            "PDX-tissue",
            "plasma-serum",
            "RNA",
            "tissue",
            "water"
          ]
        },
        "project_name": {
          "title": "Project name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "project_owner": {
          "title": "Project owner",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "experiment_id": {
          "title": "Experiment id",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "ctDNA",
            "ctTSO",
            "exome",
            "other",
            "10X",
            "TSO-DNA",
            "TSO-RNA",
            "WGS",
            "WTS"
          ]
        },
        "assay": {
          "title": "Assay",
          "type": "string",
          "enum": [
            "AgSsCRE",
            "ctTSO",
            "NebDNA",
            "NebDNAu",
            "NebRNA",
            "PCR-Free-Tagmentation",
            "10X-3prime-expression",
            "10X-5prime-expression",
            "10X-ATAC",
            "10X-CITE-feature",
            "10X-CITE-hashing",
            "10X-CNV",
            "10X-VDJ",
            "10X-VDJ-TCR",
            "TSODNA",
            "TSORNA",
            "TsqNano",
            "TsqSTR"
          ]
        },
        "override_cycles": {
          "title": "Override cycles",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "workflow": {
          "title": "Workflow",
          "type": "string",
          "enum": [
            "bcl",
            "clinical",
            "control",
            "manual",
            "qc",
            "research"
          ]
        },
        "coverage": {
          "title": "Coverage",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "truseqindex": {
          "title": "Truseqindex",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        }
      }
    },
    "LabMetadataSync": {
      "type": "object",
      "properties": {
        "sheets": {
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": true
          },
          "default": [
            "2019",
            "2020",
            "2021",
            "2022",
            "2023"
          ]
        },
        "truncate": {
          "title": "Truncate",
          "type": "boolean",
          "default": true
        }
      }
    },
    "S3ObjectModel": {
      "required": [
        "bucket",
        "key",
        "size",
        "last_modified_date",
        "e_tag"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "bucket": {
          "title": "Bucket",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "key": {
          "title": "Key",
          "type": "string",
          "minLength": 1
        },
        "size": {
          "title": "Size",
          "type": "integer",
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000
        },
        "last_modified_date": {
          "title": "Last modified date",
          "type": "string",
          "format": "date-time"
        },
        "e_tag": {
          "title": "E tag",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "unique_hash": {
          "title": "Unique hash",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        }
      }
    },
    "Sequence": {
      "required": [
        "instrument_run_id",
        "run_id",
        "sample_sheet_name",
        "gds_folder_path",
        "gds_volume_name",
        "reagent_barcode",
        "flowcell_barcode",
        "status",
        "start_time"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "instrument_run_id": {
          "title": "Instrument run id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "run_id": {
          "title": "Run id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "sample_sheet_name": {
          "title": "Sample sheet name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "gds_folder_path": {
          "title": "Gds folder path",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "gds_volume_name": {
          "title": "Gds volume name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "reagent_barcode": {
          "title": "Reagent barcode",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "flowcell_barcode": {
          "title": "Flowcell barcode",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "started",
            "failed",
            "succeeded",
            "aborted"
          ]
        },
        "start_time": {
          "title": "Start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "title": "End time",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        }
      }
    },
    "SequenceRun": {
      "required": [
        "run_id",
        "date_modified",
        "status",
        "gds_folder_path",
        "gds_volume_name",
        "reagent_barcode",
        "v1pre3_id",
        "acl",
        "flowcell_barcode",
        "sample_sheet_name",
        "api_url",
        "name",
        "instrument_run_id",
        "msg_attr_action",
        "msg_attr_action_type",
        "msg_attr_action_date",
        "msg_attr_produced_by"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "run_id": {
          "title": "Run id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "date_modified": {
          "title": "Date modified",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "gds_folder_path": {
          "title": "Gds folder path",
          "type": "string",
          "minLength": 1
        },
        "gds_volume_name": {
          "title": "Gds volume name",
          "type": "string",
          "minLength": 1
        },
        "reagent_barcode": {
          "title": "Reagent barcode",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "v1pre3_id": {
          "title": "V1pre3 id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "acl": {
          "title": "Acl",
          "type": "string",
          "minLength": 1
        },
        "flowcell_barcode": {
          "title": "Flowcell barcode",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "sample_sheet_name": {
          "title": "Sample sheet name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "api_url": {
          "title": "Api url",
          "type": "string",
          "minLength": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "instrument_run_id": {
          "title": "Instrument run id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "msg_attr_action": {
          "title": "Msg attr action",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "msg_attr_action_type": {
          "title": "Msg attr action type",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "msg_attr_action_date": {
          "title": "Msg attr action date",
          "type": "string",
          "format": "date-time"
        },
        "msg_attr_produced_by": {
          "title": "Msg attr produced by",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "Workflow": {
      "required": [
        "type_name",
        "wfr_id",
        "wfl_id",
        "wfv_id",
        "version",
        "input",
        "start"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "wfr_name": {
          "title": "Wfr name",
          "type": "string",
          "x-nullable": true
        },
        "sample_name": {
          "title": "Sample name",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "type_name": {
          "title": "Type name",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "wfr_id": {
          "title": "Wfr id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "portal_run_id": {
          "title": "Portal run id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "x-nullable": true
        },
        "wfl_id": {
          "title": "Wfl id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "wfv_id": {
          "title": "Wfv id",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "version": {
          "title": "Version",
          "type": "string",
          "maxLength": 255,
          "minLength": 1
        },
        "input": {
          "title": "Input",
          "type": "string",
          "minLength": 1
        },
        "start": {
          "title": "Start",
          "type": "string",
          "format": "date-time"
        },
        "output": {
          "title": "Output",
          "type": "string",
          "x-nullable": true
        },
        "end": {
          "title": "End",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "end_status": {
          "title": "End status",
          "type": "string",
          "maxLength": 255,
          "x-nullable": true
        },
        "notified": {
          "title": "Notified",
          "type": "boolean",
          "x-nullable": true
        },
        "sequence_run": {
          "title": "Sequence run",
          "type": "integer",
          "x-nullable": true
        },
        "batch_run": {
          "title": "Batch run",
          "type": "integer",
          "x-nullable": true
        }
      }
    }
  }
}
